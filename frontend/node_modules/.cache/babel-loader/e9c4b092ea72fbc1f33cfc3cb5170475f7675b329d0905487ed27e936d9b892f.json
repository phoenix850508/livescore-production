{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sutaoliang/live-score/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/sutaoliang/live-score/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from\"axios\";var base_url=\"https://livescore-83864383907c.herokuapp.com/api\";// get all nba games on date\nexport var getAllGames=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(date){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"\".concat(base_url,\"/date/\").concat(date));case 3:response=_context.sent;console.log(response);return _context.abrupt(\"return\",response);case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.error(\"[GET all games failed]: \",_context.t0);case 11:case\"end\":return _context.stop();}},_callee,null,[[0,8]]);}));return function getAllGames(_x){return _ref.apply(this,arguments);};}();export var getLiveGames=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.get(\"\".concat(base_url,\"/live/all\"));case 3:response=_context2.sent;console.log(response);return _context2.abrupt(\"return\",response);case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);console.error(\"[GET all live games filed: ]\",_context2.t0);case 11:case\"end\":return _context2.stop();}},_callee2,null,[[0,8]]);}));return function getLiveGames(){return _ref2.apply(this,arguments);};}();// get team information\nexport var getTeam=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(id){var response;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return axios.get(\"\".concat(base_url,\"/teams/\").concat(id));case 3:response=_context3.sent;console.log(response);return _context3.abrupt(\"return\",response);case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);console.error(\"[GET team failed]: \",_context3.t0);case 11:case\"end\":return _context3.stop();}},_callee3,null,[[0,8]]);}));return function getTeam(_x2){return _ref3.apply(this,arguments);};}();export var getgamePerSeasonPerTeam=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(season,teamId){var response;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return axios.get(\"\".concat(base_url,\"/gamesPerTeamAndSeason/\").concat(season,\"/\").concat(teamId));case 3:response=_context4.sent;console.log(response);return _context4.abrupt(\"return\",response);case 8:_context4.prev=8;_context4.t0=_context4[\"catch\"](0);console.error(\"[GET games per season/team failed]: \",_context4.t0);case 11:case\"end\":return _context4.stop();}},_callee4,null,[[0,8]]);}));return function getgamePerSeasonPerTeam(_x3,_x4){return _ref4.apply(this,arguments);};}();//get teams per conference\nexport var getTeamsConference=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(conference){var response;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return axios.get(\"\".concat(base_url,\"/teams/\").concat(conference));case 3:response=_context5.sent;console.log(response);return _context5.abrupt(\"return\",response);case 8:_context5.prev=8;_context5.t0=_context5[\"catch\"](0);console.error(\"[GET team per conference failed]: \",_context5.t0);case 11:case\"end\":return _context5.stop();}},_callee5,null,[[0,8]]);}));return function getTeamsConference(_x5){return _ref5.apply(this,arguments);};}();// get teams standing\nexport var getTeamsStandings=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(league,season,conference){var response;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:_context6.prev=0;_context6.next=3;return axios.get(\"\".concat(base_url,\"/standing/\").concat(league,\"/\").concat(season,\"/\").concat(conference));case 3:response=_context6.sent;console.log(response);return _context6.abrupt(\"return\",response);case 8:_context6.prev=8;_context6.t0=_context6[\"catch\"](0);console.error(\"[GET teams standing failed]: \",_context6.t0);case 11:case\"end\":return _context6.stop();}},_callee6,null,[[0,8]]);}));return function getTeamsStandings(_x6,_x7,_x8){return _ref6.apply(this,arguments);};}();// get match info\nexport var getMatchInfo=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(id){var response;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1)switch(_context7.prev=_context7.next){case 0:_context7.prev=0;_context7.next=3;return axios.get(\"\".concat(base_url,\"/game/\").concat(id));case 3:response=_context7.sent;console.log(response);return _context7.abrupt(\"return\",response);case 8:_context7.prev=8;_context7.t0=_context7[\"catch\"](0);console.error(\"[GET match info failed: ]\",_context7.t0);case 11:case\"end\":return _context7.stop();}},_callee7,null,[[0,8]]);}));return function getMatchInfo(_x9){return _ref7.apply(this,arguments);};}();// get match stats\nexport var getMatchStats=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(id){var response;return _regeneratorRuntime().wrap(function _callee8$(_context8){while(1)switch(_context8.prev=_context8.next){case 0:_context8.prev=0;_context8.next=3;return axios.get(\"\".concat(base_url,\"/stats/\").concat(id));case 3:response=_context8.sent;console.log(response);return _context8.abrupt(\"return\",response);case 8:_context8.prev=8;_context8.t0=_context8[\"catch\"](0);console.error(\"[GET match stats failed: ]\",_context8.t0);case 11:case\"end\":return _context8.stop();}},_callee8,null,[[0,8]]);}));return function getMatchStats(_x10){return _ref8.apply(this,arguments);};}();","map":{"version":3,"names":["axios","base_url","getAllGames","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","date","response","wrap","_callee$","_context","prev","next","get","concat","sent","console","log","abrupt","t0","error","stop","_x","apply","arguments","getLiveGames","_ref2","_callee2","_callee2$","_context2","getTeam","_ref3","_callee3","id","_callee3$","_context3","_x2","getgamePerSeasonPerTeam","_ref4","_callee4","season","teamId","_callee4$","_context4","_x3","_x4","getTeamsConference","_ref5","_callee5","conference","_callee5$","_context5","_x5","getTeamsStandings","_ref6","_callee6","league","_callee6$","_context6","_x6","_x7","_x8","getMatchInfo","_ref7","_callee7","_callee7$","_context7","_x9","getMatchStats","_ref8","_callee8","_callee8$","_context8","_x10"],"sources":["/Users/sutaoliang/live-score/frontend/src/api/nba.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst base_url = \"https://livescore-83864383907c.herokuapp.com/api\";\n\n// get all nba games on date\nexport const getAllGames = async (date: string) => {\n  try {\n    const response = await axios.get(`${base_url}/date/${date}`);\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.error(\"[GET all games failed]: \", error);\n  }\n};\n\nexport const getLiveGames = async () => {\n  try {\n    const response = await axios.get(`${base_url}/live/all`);\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.error(\"[GET all live games filed: ]\", error);\n  }\n};\n\n// get team information\nexport const getTeam = async (id: number | string) => {\n  try {\n    const response = await axios.get(`${base_url}/teams/${id}`);\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.error(\"[GET team failed]: \", error);\n  }\n};\n\nexport const getgamePerSeasonPerTeam = async (\n  season: number | string,\n  teamId: number | string\n) => {\n  try {\n    const response = await axios.get(\n      `${base_url}/gamesPerTeamAndSeason/${season}/${teamId}`\n    );\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.error(\"[GET games per season/team failed]: \", error);\n  }\n};\n\n//get teams per conference\nexport const getTeamsConference = async (conference: string) => {\n  try {\n    const response = await axios.get(`${base_url}/teams/${conference}`);\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.error(\"[GET team per conference failed]: \", error);\n  }\n};\n\n// get teams standing\nexport const getTeamsStandings = async (\n  league: string,\n  season: string,\n  conference: string\n) => {\n  try {\n    const response = await axios.get(\n      `${base_url}/standing/${league}/${season}/${conference}`\n    );\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.error(\"[GET teams standing failed]: \", error);\n  }\n};\n\n// get match info\nexport const getMatchInfo = async (id: number) => {\n  try {\n    const response = await axios.get(`${base_url}/game/${id}`);\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.error(\"[GET match info failed: ]\", error);\n  }\n};\n\n// get match stats\nexport const getMatchStats = async (id: number) => {\n  try {\n    const response = await axios.get(`${base_url}/stats/${id}`);\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.error(\"[GET match stats failed: ]\", error);\n  }\n};\n"],"mappings":"oPAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,GAAM,CAAAC,QAAQ,CAAG,kDAAkD,CAEnE;AACA,MAAO,IAAM,CAAAC,WAAW,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,IAAY,MAAAC,QAAA,QAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA,SAEnB,CAAAd,KAAK,CAACe,GAAG,IAAAC,MAAA,CAAIf,QAAQ,WAAAe,MAAA,CAASR,IAAI,CAAE,CAAC,QAAtDC,QAAQ,CAAAG,QAAA,CAAAK,IAAA,CACdC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC,CAAC,OAAAG,QAAA,CAAAQ,MAAA,UACfX,QAAQ,SAAAG,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAS,EAAA,CAAAT,QAAA,aAEfM,OAAO,CAACI,KAAK,CAAC,0BAA0B,CAAAV,QAAA,CAAAS,EAAO,CAAC,CAAC,yBAAAT,QAAA,CAAAW,IAAA,MAAAhB,OAAA,gBAEpD,kBARY,CAAAL,WAAWA,CAAAsB,EAAA,SAAArB,IAAA,CAAAsB,KAAA,MAAAC,SAAA,OAQvB,CAED,MAAO,IAAM,CAAAC,YAAY,6BAAAC,KAAA,CAAAxB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAuB,SAAA,MAAApB,QAAA,QAAAJ,mBAAA,GAAAK,IAAA,UAAAoB,UAAAC,SAAA,iBAAAA,SAAA,CAAAlB,IAAA,CAAAkB,SAAA,CAAAjB,IAAA,SAAAiB,SAAA,CAAAlB,IAAA,GAAAkB,SAAA,CAAAjB,IAAA,SAED,CAAAd,KAAK,CAACe,GAAG,IAAAC,MAAA,CAAIf,QAAQ,aAAW,CAAC,QAAlDQ,QAAQ,CAAAsB,SAAA,CAAAd,IAAA,CACdC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC,CAAC,OAAAsB,SAAA,CAAAX,MAAA,UACfX,QAAQ,SAAAsB,SAAA,CAAAlB,IAAA,GAAAkB,SAAA,CAAAV,EAAA,CAAAU,SAAA,aAEfb,OAAO,CAACI,KAAK,CAAC,8BAA8B,CAAAS,SAAA,CAAAV,EAAO,CAAC,CAAC,yBAAAU,SAAA,CAAAR,IAAA,MAAAM,QAAA,gBAExD,kBARY,CAAAF,YAAYA,CAAA,SAAAC,KAAA,CAAAH,KAAA,MAAAC,SAAA,OAQxB,CAED;AACA,MAAO,IAAM,CAAAM,OAAO,6BAAAC,KAAA,CAAA7B,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA4B,SAAOC,EAAmB,MAAA1B,QAAA,QAAAJ,mBAAA,GAAAK,IAAA,UAAA0B,UAAAC,SAAA,iBAAAA,SAAA,CAAAxB,IAAA,CAAAwB,SAAA,CAAAvB,IAAA,SAAAuB,SAAA,CAAAxB,IAAA,GAAAwB,SAAA,CAAAvB,IAAA,SAEtB,CAAAd,KAAK,CAACe,GAAG,IAAAC,MAAA,CAAIf,QAAQ,YAAAe,MAAA,CAAUmB,EAAE,CAAE,CAAC,QAArD1B,QAAQ,CAAA4B,SAAA,CAAApB,IAAA,CACdC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC,CAAC,OAAA4B,SAAA,CAAAjB,MAAA,UACfX,QAAQ,SAAA4B,SAAA,CAAAxB,IAAA,GAAAwB,SAAA,CAAAhB,EAAA,CAAAgB,SAAA,aAEfnB,OAAO,CAACI,KAAK,CAAC,qBAAqB,CAAAe,SAAA,CAAAhB,EAAO,CAAC,CAAC,yBAAAgB,SAAA,CAAAd,IAAA,MAAAW,QAAA,gBAE/C,kBARY,CAAAF,OAAOA,CAAAM,GAAA,SAAAL,KAAA,CAAAR,KAAA,MAAAC,SAAA,OAQnB,CAED,MAAO,IAAM,CAAAa,uBAAuB,6BAAAC,KAAA,CAAApC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAmC,SACrCC,MAAuB,CACvBC,MAAuB,MAAAlC,QAAA,QAAAJ,mBAAA,GAAAK,IAAA,UAAAkC,UAAAC,SAAA,iBAAAA,SAAA,CAAAhC,IAAA,CAAAgC,SAAA,CAAA/B,IAAA,SAAA+B,SAAA,CAAAhC,IAAA,GAAAgC,SAAA,CAAA/B,IAAA,SAGE,CAAAd,KAAK,CAACe,GAAG,IAAAC,MAAA,CAC3Bf,QAAQ,4BAAAe,MAAA,CAA0B0B,MAAM,MAAA1B,MAAA,CAAI2B,MAAM,CACvD,CAAC,QAFKlC,QAAQ,CAAAoC,SAAA,CAAA5B,IAAA,CAGdC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC,CAAC,OAAAoC,SAAA,CAAAzB,MAAA,UACfX,QAAQ,SAAAoC,SAAA,CAAAhC,IAAA,GAAAgC,SAAA,CAAAxB,EAAA,CAAAwB,SAAA,aAEf3B,OAAO,CAACI,KAAK,CAAC,sCAAsC,CAAAuB,SAAA,CAAAxB,EAAO,CAAC,CAAC,yBAAAwB,SAAA,CAAAtB,IAAA,MAAAkB,QAAA,gBAEhE,kBAbY,CAAAF,uBAAuBA,CAAAO,GAAA,CAAAC,GAAA,SAAAP,KAAA,CAAAf,KAAA,MAAAC,SAAA,OAanC,CAED;AACA,MAAO,IAAM,CAAAsB,kBAAkB,6BAAAC,KAAA,CAAA7C,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA4C,SAAOC,UAAkB,MAAA1C,QAAA,QAAAJ,mBAAA,GAAAK,IAAA,UAAA0C,UAAAC,SAAA,iBAAAA,SAAA,CAAAxC,IAAA,CAAAwC,SAAA,CAAAvC,IAAA,SAAAuC,SAAA,CAAAxC,IAAA,GAAAwC,SAAA,CAAAvC,IAAA,SAEhC,CAAAd,KAAK,CAACe,GAAG,IAAAC,MAAA,CAAIf,QAAQ,YAAAe,MAAA,CAAUmC,UAAU,CAAE,CAAC,QAA7D1C,QAAQ,CAAA4C,SAAA,CAAApC,IAAA,CACdC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC,CAAC,OAAA4C,SAAA,CAAAjC,MAAA,UACfX,QAAQ,SAAA4C,SAAA,CAAAxC,IAAA,GAAAwC,SAAA,CAAAhC,EAAA,CAAAgC,SAAA,aAEfnC,OAAO,CAACI,KAAK,CAAC,oCAAoC,CAAA+B,SAAA,CAAAhC,EAAO,CAAC,CAAC,yBAAAgC,SAAA,CAAA9B,IAAA,MAAA2B,QAAA,gBAE9D,kBARY,CAAAF,kBAAkBA,CAAAM,GAAA,SAAAL,KAAA,CAAAxB,KAAA,MAAAC,SAAA,OAQ9B,CAED;AACA,MAAO,IAAM,CAAA6B,iBAAiB,6BAAAC,KAAA,CAAApD,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAmD,SAC/BC,MAAc,CACdhB,MAAc,CACdS,UAAkB,MAAA1C,QAAA,QAAAJ,mBAAA,GAAAK,IAAA,UAAAiD,UAAAC,SAAA,iBAAAA,SAAA,CAAA/C,IAAA,CAAA+C,SAAA,CAAA9C,IAAA,SAAA8C,SAAA,CAAA/C,IAAA,GAAA+C,SAAA,CAAA9C,IAAA,SAGO,CAAAd,KAAK,CAACe,GAAG,IAAAC,MAAA,CAC3Bf,QAAQ,eAAAe,MAAA,CAAa0C,MAAM,MAAA1C,MAAA,CAAI0B,MAAM,MAAA1B,MAAA,CAAImC,UAAU,CACxD,CAAC,QAFK1C,QAAQ,CAAAmD,SAAA,CAAA3C,IAAA,CAGdC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC,CAAC,OAAAmD,SAAA,CAAAxC,MAAA,UACfX,QAAQ,SAAAmD,SAAA,CAAA/C,IAAA,GAAA+C,SAAA,CAAAvC,EAAA,CAAAuC,SAAA,aAEf1C,OAAO,CAACI,KAAK,CAAC,+BAA+B,CAAAsC,SAAA,CAAAvC,EAAO,CAAC,CAAC,yBAAAuC,SAAA,CAAArC,IAAA,MAAAkC,QAAA,gBAEzD,kBAdY,CAAAF,iBAAiBA,CAAAM,GAAA,CAAAC,GAAA,CAAAC,GAAA,SAAAP,KAAA,CAAA/B,KAAA,MAAAC,SAAA,OAc7B,CAED;AACA,MAAO,IAAM,CAAAsC,YAAY,6BAAAC,KAAA,CAAA7D,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA4D,SAAO/B,EAAU,MAAA1B,QAAA,QAAAJ,mBAAA,GAAAK,IAAA,UAAAyD,UAAAC,SAAA,iBAAAA,SAAA,CAAAvD,IAAA,CAAAuD,SAAA,CAAAtD,IAAA,SAAAsD,SAAA,CAAAvD,IAAA,GAAAuD,SAAA,CAAAtD,IAAA,SAElB,CAAAd,KAAK,CAACe,GAAG,IAAAC,MAAA,CAAIf,QAAQ,WAAAe,MAAA,CAASmB,EAAE,CAAE,CAAC,QAApD1B,QAAQ,CAAA2D,SAAA,CAAAnD,IAAA,CACdC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC,CAAC,OAAA2D,SAAA,CAAAhD,MAAA,UACfX,QAAQ,SAAA2D,SAAA,CAAAvD,IAAA,GAAAuD,SAAA,CAAA/C,EAAA,CAAA+C,SAAA,aAEflD,OAAO,CAACI,KAAK,CAAC,2BAA2B,CAAA8C,SAAA,CAAA/C,EAAO,CAAC,CAAC,yBAAA+C,SAAA,CAAA7C,IAAA,MAAA2C,QAAA,gBAErD,kBARY,CAAAF,YAAYA,CAAAK,GAAA,SAAAJ,KAAA,CAAAxC,KAAA,MAAAC,SAAA,OAQxB,CAED;AACA,MAAO,IAAM,CAAA4C,aAAa,6BAAAC,KAAA,CAAAnE,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAkE,SAAOrC,EAAU,MAAA1B,QAAA,QAAAJ,mBAAA,GAAAK,IAAA,UAAA+D,UAAAC,SAAA,iBAAAA,SAAA,CAAA7D,IAAA,CAAA6D,SAAA,CAAA5D,IAAA,SAAA4D,SAAA,CAAA7D,IAAA,GAAA6D,SAAA,CAAA5D,IAAA,SAEnB,CAAAd,KAAK,CAACe,GAAG,IAAAC,MAAA,CAAIf,QAAQ,YAAAe,MAAA,CAAUmB,EAAE,CAAE,CAAC,QAArD1B,QAAQ,CAAAiE,SAAA,CAAAzD,IAAA,CACdC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC,CAAC,OAAAiE,SAAA,CAAAtD,MAAA,UACfX,QAAQ,SAAAiE,SAAA,CAAA7D,IAAA,GAAA6D,SAAA,CAAArD,EAAA,CAAAqD,SAAA,aAEfxD,OAAO,CAACI,KAAK,CAAC,4BAA4B,CAAAoD,SAAA,CAAArD,EAAO,CAAC,CAAC,yBAAAqD,SAAA,CAAAnD,IAAA,MAAAiD,QAAA,gBAEtD,kBARY,CAAAF,aAAaA,CAAAK,IAAA,SAAAJ,KAAA,CAAA9C,KAAA,MAAAC,SAAA,OAQzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}