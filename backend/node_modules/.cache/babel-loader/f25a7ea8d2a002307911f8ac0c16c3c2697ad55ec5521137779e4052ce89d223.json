{"ast":null,"code":"import _defineProperty from\"/Users/sutaoliang/live-score/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import usaIcon from\"icons/usaIcon.svg\";import spainIcon from\"icons/spainIcon.svg\";import englandIcon from\"icons/englandIcon.svg\";import germanyIcon from\"icons/germanyIcon.svg\";import italyIcon from\"icons/italyIcon.svg\";import africaIcon from\"icons/africaIcon.svg\";import europeIcon from\"icons/europeIcon.svg\";import worldIcon from\"icons/worldIcon.svg\";import LeagueItem from\"./leaguesComponents/LeagueItem\";import clsx from\"clsx\";import styles from\"./LeaguesAll.module.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function LeaguesAll(props){var locations=[{Africa:africaIcon},{England:englandIcon},{Europe:europeIcon},{Germany:germanyIcon},{Italy:italyIcon},{Spain:spainIcon},{USA:usaIcon},{World:worldIcon}];var leagues=new Map();leagues.set(\"USA\",[\"MLB\",\"NBA\"]);return/*#__PURE__*/_jsxs(\"div\",{className:clsx(_defineProperty({},styles.noShow,props.showMobileIcon!==\"leagues\"),styles.leaguesAll),children:[/*#__PURE__*/_jsx(\"h3\",{className:styles.leagueTitle,children:\"All Leagues\"}),locations.map(function(location,index){var indexBottom=false;if(index===7)indexBottom=true;var leagueArr=null;if(leagues.has(Object.keys(location)[0])){leagueArr=leagues.get(Object.keys(location)[0]);}return/*#__PURE__*/_jsx(LeagueItem,{locationIcon:Object.values(location),locationTitle:Object.keys(location),leagueArr:leagueArr,indexBottom:indexBottom},index);})]});}","map":{"version":3,"names":["usaIcon","spainIcon","englandIcon","germanyIcon","italyIcon","africaIcon","europeIcon","worldIcon","LeagueItem","clsx","styles","jsx","_jsx","jsxs","_jsxs","LeaguesAll","props","locations","Africa","England","Europe","Germany","Italy","Spain","USA","World","leagues","Map","set","className","_defineProperty","noShow","showMobileIcon","leaguesAll","children","leagueTitle","map","location","index","indexBottom","leagueArr","has","Object","keys","get","locationIcon","values","locationTitle"],"sources":["/Users/sutaoliang/live-score/frontend/src/components/main/leftSection/leagues/LeaguesAll.tsx"],"sourcesContent":["import usaIcon from \"icons/usaIcon.svg\";\nimport spainIcon from \"icons/spainIcon.svg\";\nimport englandIcon from \"icons/englandIcon.svg\";\nimport germanyIcon from \"icons/germanyIcon.svg\";\nimport italyIcon from \"icons/italyIcon.svg\";\nimport africaIcon from \"icons/africaIcon.svg\";\nimport europeIcon from \"icons/europeIcon.svg\";\nimport worldIcon from \"icons/worldIcon.svg\";\nimport LeagueItem from \"./leaguesComponents/LeagueItem\";\nimport { onCalendarClick, onMobileIcon } from \"types/types\";\nimport clsx from \"clsx\";\nimport styles from \"./LeaguesAll.module.scss\";\n\ninterface combinedTypes extends onCalendarClick, onMobileIcon {}\nexport default function LeaguesAll(props: combinedTypes) {\n  const locations: object[] = [\n    { Africa: africaIcon },\n    { England: englandIcon },\n    { Europe: europeIcon },\n    { Germany: germanyIcon },\n    { Italy: italyIcon },\n    { Spain: spainIcon },\n    { USA: usaIcon },\n    { World: worldIcon },\n  ];\n  const leagues = new Map();\n  leagues.set(\"USA\", [\"MLB\", \"NBA\"]);\n  return (\n    <div\n      className={clsx(\n        { [styles.noShow]: props.showMobileIcon !== \"leagues\" },\n        styles.leaguesAll\n      )}\n    >\n      <h3 className={styles.leagueTitle}>All Leagues</h3>\n      {locations.map((location: object, index: number) => {\n        let indexBottom = false;\n        if (index === 7) indexBottom = true;\n        let leagueArr: string[] | null = null;\n        if (leagues.has(Object.keys(location)[0])) {\n          leagueArr = leagues.get(Object.keys(location)[0]);\n        }\n        return (\n          <LeagueItem\n            key={index}\n            locationIcon={Object.values(location)}\n            locationTitle={Object.keys(location)}\n            leagueArr={leagueArr}\n            indexBottom={indexBottom}\n          />\n        );\n      })}\n    </div>\n  );\n}\n"],"mappings":"6HAAA,MAAO,CAAAA,OAAO,KAAM,mBAAmB,CACvC,MAAO,CAAAC,SAAS,KAAM,qBAAqB,CAC3C,MAAO,CAAAC,WAAW,KAAM,uBAAuB,CAC/C,MAAO,CAAAC,WAAW,KAAM,uBAAuB,CAC/C,MAAO,CAAAC,SAAS,KAAM,qBAAqB,CAC3C,MAAO,CAAAC,UAAU,KAAM,sBAAsB,CAC7C,MAAO,CAAAC,UAAU,KAAM,sBAAsB,CAC7C,MAAO,CAAAC,SAAS,KAAM,qBAAqB,CAC3C,MAAO,CAAAC,UAAU,KAAM,gCAAgC,CAEvD,MAAO,CAAAC,IAAI,KAAM,MAAM,CACvB,MAAO,CAAAC,MAAM,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAG9C,cAAe,SAAS,CAAAC,UAAUA,CAACC,KAAoB,CAAE,CACvD,GAAM,CAAAC,SAAmB,CAAG,CAC1B,CAAEC,MAAM,CAAEb,UAAW,CAAC,CACtB,CAAEc,OAAO,CAAEjB,WAAY,CAAC,CACxB,CAAEkB,MAAM,CAAEd,UAAW,CAAC,CACtB,CAAEe,OAAO,CAAElB,WAAY,CAAC,CACxB,CAAEmB,KAAK,CAAElB,SAAU,CAAC,CACpB,CAAEmB,KAAK,CAAEtB,SAAU,CAAC,CACpB,CAAEuB,GAAG,CAAExB,OAAQ,CAAC,CAChB,CAAEyB,KAAK,CAAElB,SAAU,CAAC,CACrB,CACD,GAAM,CAAAmB,OAAO,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CACzBD,OAAO,CAACE,GAAG,CAAC,KAAK,CAAE,CAAC,KAAK,CAAE,KAAK,CAAC,CAAC,CAClC,mBACEd,KAAA,QACEe,SAAS,CAAEpB,IAAI,CAAAqB,eAAA,IACVpB,MAAM,CAACqB,MAAM,CAAGf,KAAK,CAACgB,cAAc,GAAK,SAAS,EACrDtB,MAAM,CAACuB,UACT,CAAE,CAAAC,QAAA,eAEFtB,IAAA,OAAIiB,SAAS,CAAEnB,MAAM,CAACyB,WAAY,CAAAD,QAAA,CAAC,aAAW,CAAI,CAAC,CAClDjB,SAAS,CAACmB,GAAG,CAAC,SAACC,QAAgB,CAAEC,KAAa,CAAK,CAClD,GAAI,CAAAC,WAAW,CAAG,KAAK,CACvB,GAAID,KAAK,GAAK,CAAC,CAAEC,WAAW,CAAG,IAAI,CACnC,GAAI,CAAAC,SAA0B,CAAG,IAAI,CACrC,GAAId,OAAO,CAACe,GAAG,CAACC,MAAM,CAACC,IAAI,CAACN,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,CACzCG,SAAS,CAAGd,OAAO,CAACkB,GAAG,CAACF,MAAM,CAACC,IAAI,CAACN,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CACnD,CACA,mBACEzB,IAAA,CAACJ,UAAU,EAETqC,YAAY,CAAEH,MAAM,CAACI,MAAM,CAACT,QAAQ,CAAE,CACtCU,aAAa,CAAEL,MAAM,CAACC,IAAI,CAACN,QAAQ,CAAE,CACrCG,SAAS,CAAEA,SAAU,CACrBD,WAAW,CAAEA,WAAY,EAJpBD,KAKN,CAAC,CAEN,CAAC,CAAC,EACC,CAAC,CAEV"},"metadata":{},"sourceType":"module","externalDependencies":[]}